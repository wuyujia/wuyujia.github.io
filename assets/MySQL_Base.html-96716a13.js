import{_ as s,W as a,X as n,a1 as e}from"./framework-817d905c.js";const o={},p=e(`<h2 id="mysql-函数用法" tabindex="-1"><a class="header-anchor" href="#mysql-函数用法" aria-hidden="true">#</a> MySQL 函数用法</h2><h3 id="exists-的用法" tabindex="-1"><a class="header-anchor" href="#exists-的用法" aria-hidden="true">#</a> Exists 的用法</h3><div class="hint-container tip"><p class="hint-container-title">语法</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_1 <span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span> subquery <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>EXISTS 用于检查子查询是否至少会返回一行数据, 该子查询实际上并不返回任何数据, 而是返回值True或False, EXISTS 指定一个子查询，检测<code>行</code>的存在</p></div><p>先看例子</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span>
<span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> uid <span class="token keyword">FROM</span> <span class="token keyword">order</span> <span class="token keyword">WHERE</span> <span class="token keyword">user</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token keyword">order</span><span class="token punctuation">.</span>uid <span class="token operator">AND</span> <span class="token keyword">order</span><span class="token punctuation">.</span><span class="token keyword">no</span> <span class="token operator">=</span> <span class="token string">&#39;202304251128&#39;</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这段SQL表示要查询这个订单号对应的用户信息，实现有几种方案：</p><ol><li>单表查询，先使用订单号查询用户id，再去用户表查询用户信息（推荐）</li><li>连表查询（不推荐）</li><li>上述方式</li><li>实用IN替代</li></ol><p>执行逻辑：</p><blockquote><p>将外查询表的每一行，代入内查询作为检验，如果内查询返回的结果取非空值，则EXISTS子句返回TRUE，这一行行可作为外查询的结果行，否则不能作为结果。<br> 执行顺序如下：<br> 1.首先执行一次外部查询<br> 2.对于外部查询中的每一行分别执行一次子查询，而且每次执行子查询时都会引用外部查询中当前行的值。<br> 3.使用子查询的结果来确定外部查询的结果集。<br> 如果外部查询返回100行，SQL 就将执行101次查询，一次执行外部查询，然后为外部查询返回的每一行执行一次子查询。</p></blockquote><p>效率问题：</p><blockquote><p>EXISTS与IN的使用效率的问题，通常情况下采用exists要比in效率高，但要看实际情况具体使用： IN适合于外表大而内表小的情况；EXISTS适合于外表小而内表大的情况。</p></blockquote>`,11),t=[p];function l(r,c){return a(),n("div",null,t)}const d=s(o,[["render",l],["__file","MySQL_Base.html.vue"]]);export{d as default};
