import{_ as n,W as s,X as a,a2 as p}from"./framework-aa83d01c.js";const e={},t=p(`<h2 id="数据库信息查询" tabindex="-1"><a class="header-anchor" href="#数据库信息查询" aria-hidden="true">#</a> 数据库信息查询</h2><h3 id="数据库所有表信息查询" tabindex="-1"><a class="header-anchor" href="#数据库所有表信息查询" aria-hidden="true">#</a> 数据库所有表信息查询</h3><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>SELECT * FROM information_schema.\`TABLES\` WHERE table_schema = &#39;数据库名称&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查询数据库表结构" tabindex="-1"><a class="header-anchor" href="#查询数据库表结构" aria-hidden="true">#</a> 查询数据库表结构</h3><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>SELECT * FROM information_schema.\`COLUMNS\` WHERE table_name = &#39;表名称&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>可以查询表字段</li><li>可以查询字段在那些表中</li></ul><h2 id="sql查询具有树结构的数据" tabindex="-1"><a class="header-anchor" href="#sql查询具有树结构的数据" aria-hidden="true">#</a> SQL查询具有树结构的数据</h2><p>建表语句</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>t_tree<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;名称&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>parent_id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;父节点&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;树结构存储&#39;</span><span class="token punctuation">;</span>


<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_tree <span class="token keyword">VALUES</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;根节点&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;结点2&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;结点3&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;结点4&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;结点5&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;结点6&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;结点7&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;结点8&#39;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查找根节点" tabindex="-1"><a class="header-anchor" href="#查找根节点" aria-hidden="true">#</a> 查找根节点</h3><p>parent_id 一定小于id, 查询时需要先将数据逆序过来，让叶子结点出现在前面，才能正确的找到根节点</p><p>查询语句, 小数据量时可以减少递归查询次数, 大数据量还是递归查询比较适合</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	name<span class="token punctuation">,</span>
	parent_id<span class="token punctuation">,</span>
	id<span class="token punctuation">,</span>
	<span class="token variable">@id</span> :<span class="token operator">=</span> parent_id 
<span class="token keyword">FROM</span>
	<span class="token punctuation">(</span> <span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> parent_id<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token variable">@id</span> :<span class="token operator">=</span> <span class="token number">8</span> <span class="token keyword">FROM</span> t_tree <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> id <span class="token keyword">DESC</span> <span class="token punctuation">)</span> reverse 
<span class="token keyword">WHERE</span>
	id <span class="token operator">=</span> <span class="token variable">@id</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查找所有子节点" tabindex="-1"><a class="header-anchor" href="#查找所有子节点" aria-hidden="true">#</a> 查找所有子节点</h3><p>parent_id 一定小于id，直接正向查找能找到所有的子节点</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token variable">@id</span>:<span class="token operator">=</span><span class="token punctuation">(</span>CONCAT<span class="token punctuation">(</span><span class="token variable">@id</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span>name<span class="token punctuation">,</span> i<span class="token punctuation">.</span>parent_id<span class="token punctuation">,</span> i<span class="token punctuation">.</span>id
<span class="token keyword">FROM</span> t_tree i
<span class="token keyword">JOIN</span> <span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> <span class="token variable">@id</span> :<span class="token operator">=</span> <span class="token number">3</span>
<span class="token punctuation">)</span> t
<span class="token keyword">WHERE</span> FIND_IN_SET<span class="token punctuation">(</span>i<span class="token punctuation">.</span>parent_id<span class="token punctuation">,</span> <span class="token variable">@id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),o=[t];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","Command.html.vue"]]);export{d as default};
