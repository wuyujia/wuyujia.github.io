import{_ as n,W as a,X as t,a2 as s}from"./framework-aa83d01c.js";const e={},o=s(`<h2 id="概览" tabindex="-1"><a class="header-anchor" href="#概览" aria-hidden="true">#</a> 概览</h2><ul><li>整型（4）</li><li>浮点型（2）</li><li>字符型（1）</li><li>布尔型（1）</li></ul><h2 id="整型-4" tabindex="-1"><a class="header-anchor" href="#整型-4" aria-hidden="true">#</a> 整型（4）</h2><table><thead><tr><th>类型</th><th>占用空间</th><th>范围</th></tr></thead><tbody><tr><td>byte</td><td>1byte</td><td>-2<sup>7</sup> ~ 2<sup>7</sup></td></tr><tr><td>long</td><td>8byte</td><td>-2<sup>63</sup> ~ 2<sup>63</sup></td></tr><tr><td>int</td><td>4byte</td><td>-2<sup>31</sup> ~ 2<sup>31</sup></td></tr><tr><td>short</td><td>2byte</td><td>-2<sup>15</sup> ~ 2<sup>15</sup></td></tr></tbody></table><p>类型之间可以进行<mark>强制类型转换</mark>，但是向下类型强转可能会导致精度丢失，当真的需要强转时，一定要提前思考。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>当真的需要强转，可以采用如下代码来进行判断</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> longValue <span class="token operator">=</span> <span class="token number">1234567890123L</span><span class="token punctuation">;</span> <span class="token comment">// 一个long值</span>

    <span class="token comment">// 判断是否会导致精度丢失</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>longValue <span class="token operator">&gt;=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span> <span class="token operator">&amp;&amp;</span> longValue <span class="token operator">&lt;=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 可以进行转换</span>
        <span class="token keyword">int</span> intValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> longValue<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;转换后的int值: &quot;</span> <span class="token operator">+</span> intValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 会导致精度丢失</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;转换会导致精度丢失&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="不同进制的写法" tabindex="-1"><a class="header-anchor" href="#不同进制的写法" aria-hidden="true">#</a> 不同进制的写法</h3><p>JDK7以后的特殊写法：可以添加 <code>_</code> 来让数字更好读</p><blockquote><p>例如：int i = 10_000_000; // 表示1千万</p></blockquote><p>二进制，<code>0B</code> or <code>0b</code> 开头</p><blockquote><p>byte b = 0b0000_1110; // 或者 0B00001110; 14</p></blockquote><p>十进制, 直接写</p><blockquote><p>int i = 10_000_000;</p></blockquote><p>十六进制, <code>0x</code> 开头</p><blockquote><p>int i = 0x1F; // 前面是数字0， 不是字母O, 31</p></blockquote><p>八进制，<code>0</code> 开头，<span style="color:red;">不建议使用</span></p><blockquote><p>int i = 012; // 前面是数字0, 10</p></blockquote><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Java没有任何无符号（unsigned）表示方法</p></div><h2 id="浮点型-2" tabindex="-1"><a class="header-anchor" href="#浮点型-2" aria-hidden="true">#</a> 浮点型（2）</h2><table><thead><tr><th>类型</th><th>占用空间</th><th>范围</th></tr></thead><tbody><tr><td>float</td><td>4byte</td><td>-3.40282347<em>E+38F ~ 3.40282347</em>E+38F (有效位数为6～7位)</td></tr><tr><td>double</td><td>8byte</td><td>-1.79769313486231570E+308 (有效位数位15位)</td></tr></tbody></table><blockquote><p>浮点数计算有一个标准叫 <code>IEEE 754</code><br> 浮点数在平时计算中用得不多，浮点数运算基本全都用BigDecimal来替代了。 在Java中有一个保留关键字，strictfp，是用于计算标准浮点数的，但是在日常生活中极少使用，没有去了解。</p></blockquote><h2 id="char类型-1" tabindex="-1"><a class="header-anchor" href="#char类型-1" aria-hidden="true">#</a> char类型（1）</h2><table><thead><tr><th>类型</th><th>占用空间</th><th>范围</th></tr></thead><tbody><tr><td>Unicode（默认）</td><td>2byte</td><td>0x0000～0xFFFF</td></tr><tr><td>UTF-8</td><td>3byte</td><td>-</td></tr></tbody></table><p><code>int bytes = &quot;中国&quot;.getBytes().length; // 6</code></p><div class="hint-container danger"><p class="hint-container-title">注意</p><ol><li>最好不要在Java程序中使用char类型，除非确实需要，否则用String类型替代；</li><li>虽然<code>$</code>是合法字符，但是不要在自己的代码中使用，这一般是Java编译器使用的字符；</li></ol></div><h2 id="bool类型-1" tabindex="-1"><a class="header-anchor" href="#bool类型-1" aria-hidden="true">#</a> bool类型（1）</h2><p>只有<code>true</code>和<code>false</code>两个值，占1字节</p>`,27),p=[o];function c(l,i){return a(),t("div",null,p)}const u=n(e,[["render",c],["__file","1-数据类型.html.vue"]]);export{u as default};
